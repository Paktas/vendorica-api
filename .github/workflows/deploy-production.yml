name: Deploy to Cloudways Production

on:
  push:
    branches: [main]
  workflow_dispatch: # Manual trigger

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: 📦 Install dependencies and build
        run: |
          npm ci
          npm run build
          
      - name: 🔍 Debug GitHub Secrets
        run: |
          echo "=== GITHUB SECRETS DEBUG ==="
          
          # Check for each secret
          if [ -z "${{ secrets.CLOUDWAYS_HOST }}" ]; then
            echo "❌ CLOUDWAYS_HOST secret is not set!"
          else
            echo "✅ CLOUDWAYS_HOST is set (${#HOST_VALUE} chars)"
            echo "Host ends with: ...${HOST_VALUE: -8}"
          fi
          
          if [ -z "${{ secrets.CLOUDWAYS_USER }}" ]; then
            echo "❌ CLOUDWAYS_USER secret is not set!"
          else
            echo "✅ CLOUDWAYS_USER is set (${#USER_VALUE} chars)"
            echo "Username ends with: ...${USER_VALUE: -8}"
          fi
          
          if [ -z "${{ secrets.CLOUDWAYS_SSH_KEY }}" ]; then
            echo "❌ CLOUDWAYS_SSH_KEY secret is not set!"
          else
            echo "✅ CLOUDWAYS_SSH_KEY is set (${#CLOUDWAYS_SSH_KEY} chars)"
            
            # Check if SSH key is base64 encoded
            if echo "${CLOUDWAYS_SSH_KEY}" | grep -q "^-----BEGIN"; then
              echo "✅ SSH key format looks correct (starts with -----BEGIN)"
            else
              echo "⚠️ SSH key might be base64 encoded or incorrect format"
              echo "First 30 chars: ${CLOUDWAYS_SSH_KEY:0:30}"
              
              # Try to decode and check
              if echo "${CLOUDWAYS_SSH_KEY}" | base64 -d 2>/dev/null | grep -q "^-----BEGIN"; then
                echo "❌ SSH key IS base64 encoded! It should be plain text."
                echo "The key should start with: -----BEGIN RSA PRIVATE KEY-----"
              fi
            fi
          fi
          
          if [ -z "${{ secrets.CLOUDWAYS_PORT }}" ]; then
            echo "❌ CLOUDWAYS_PORT secret is not set!"
          else
            echo "✅ CLOUDWAYS_PORT is set (${#PORT_VALUE} chars)"
          fi
        env:
          CLOUDWAYS_SSH_KEY: ${{ secrets.CLOUDWAYS_SSH_KEY }}
          HOST_VALUE: ${{ secrets.CLOUDWAYS_HOST }}
          USER_VALUE: ${{ secrets.CLOUDWAYS_USER }}
          PORT_VALUE: ${{ secrets.CLOUDWAYS_PORT }}

      - name: 🔐 Test SSH Connection
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.CLOUDWAYS_HOST }}
          username: ${{ secrets.CLOUDWAYS_USER }}
          key: ${{ secrets.CLOUDWAYS_SSH_KEY }}
          port: ${{ secrets.CLOUDWAYS_PORT }}
          script: |
            echo "=== SSH CONNECTION TEST ==="
            echo "✅ SSH connection successful!"
            echo "Current directory: $(pwd)"
            echo "User: $(whoami)"
            echo "Server: $(hostname)"

      - name: 🔍 Check Server Environment
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.CLOUDWAYS_HOST }}
          username: ${{ secrets.CLOUDWAYS_USER }}
          key: ${{ secrets.CLOUDWAYS_SSH_KEY }}
          port: ${{ secrets.CLOUDWAYS_PORT }}
          script: |
            echo "Initial directory: $(pwd)"
            echo "Current user: $(whoami)"
            cd public_html
            echo "Working directory: $(pwd)"
            
            echo -e "\n📦 Package versions:"
            echo "Node.js: $(node --version 2>/dev/null || echo 'not found')"
            echo "npm: $(npm --version 2>/dev/null || echo 'not found')"
            echo "Git: $(git --version 2>/dev/null || echo 'not found')"
            echo "PM2: $(pm2 --version 2>/dev/null || echo 'not found')"

      - name: 🧹 Clean Deployment Directory
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.CLOUDWAYS_HOST }}
          username: ${{ secrets.CLOUDWAYS_USER }}
          key: ${{ secrets.CLOUDWAYS_SSH_KEY }}
          port: ${{ secrets.CLOUDWAYS_PORT }}
          script: |
            cd public_html
            echo "Current directory contents:"
            ls -la
            
            # Clean directory for fresh deployment
            if [ -d ".git" ]; then
              echo "Removing existing git repository..."
              rm -rf .git
            fi
            
            echo "Cleaning directory..."
            find . -mindepth 1 -maxdepth 1 -exec rm -rf {} +
            
            echo "Directory after cleanup:"
            ls -la

      - name: 📥 Clone Repository
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.CLOUDWAYS_HOST }}
          username: ${{ secrets.CLOUDWAYS_USER }}
          key: ${{ secrets.CLOUDWAYS_SSH_KEY }}
          port: ${{ secrets.CLOUDWAYS_PORT }}
          script: |
            cd public_html
            echo "Cloning repository..."
            git clone https://github.com/Paktas/vendorica-api.git .
            
            # Verify clone
            if [ -d ".git" ]; then
              echo "✅ Repository cloned successfully"
              echo "Key files:"
              [ -f "package.json" ] && echo "✅ package.json" || echo "❌ package.json missing"
              [ -d "src" ] && echo "✅ src/" || echo "❌ src/ missing"
              [ -f "tsconfig.json" ] && echo "✅ tsconfig.json" || echo "❌ tsconfig.json missing"
            else
              echo "❌ Git clone failed"
              exit 1
            fi

      - name: 📦 Install Dependencies
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.CLOUDWAYS_HOST }}
          username: ${{ secrets.CLOUDWAYS_USER }}
          key: ${{ secrets.CLOUDWAYS_SSH_KEY }}
          port: ${{ secrets.CLOUDWAYS_PORT }}
          script: |
            cd public_html
            
            # Fix npm cache permissions
            echo "Fixing npm cache permissions..."
            sudo chown -R 1012:33 "/home/1462634.cloudwaysapps.com/jwnbrgtuur/.npm" 2>/dev/null || true
            
            echo "Installing production dependencies..."
            npm install --omit=dev
            
            # Verify installation
            if [ -d "node_modules" ]; then
              echo "✅ Dependencies installed successfully"
              echo "node_modules size: $(du -sh node_modules 2>/dev/null | cut -f1)"
            else
              echo "❌ npm install failed"
              exit 1
            fi

      - name: 🔨 Build Application
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.CLOUDWAYS_HOST }}
          username: ${{ secrets.CLOUDWAYS_USER }}
          key: ${{ secrets.CLOUDWAYS_SSH_KEY }}
          port: ${{ secrets.CLOUDWAYS_PORT }}
          script: |
            cd public_html
            
            echo "Building application..."
            npm run build
            
            # Verify build
            if [ -d "dist" ]; then
              echo "✅ Build completed successfully"
              echo "Build size: $(du -sh dist 2>/dev/null | cut -f1)"
              echo "Key files:"
              [ -f "dist/index.js" ] && echo "✅ dist/index.js" || echo "❌ dist/index.js missing"
              [ -f "dist/app.js" ] && echo "✅ dist/app.js" || echo "⚠️ dist/app.js not required"
            else
              echo "❌ Build failed - dist directory not found"
              exit 1
            fi

      - name: ⚙️ Setup PM2 Process
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.CLOUDWAYS_HOST }}
          username: ${{ secrets.CLOUDWAYS_USER }}
          key: ${{ secrets.CLOUDWAYS_SSH_KEY }}
          port: ${{ secrets.CLOUDWAYS_PORT }}
          script: |
            cd public_html
            
            # Check if PM2 is available
            if command -v pm2 > /dev/null 2>&1; then
              echo "PM2 is available"
              
              # Check if process exists
              if pm2 describe vendorica-api > /dev/null 2>&1; then
                echo "Reloading existing PM2 process..."
                pm2 reload vendorica-api --update-env
              else
                echo "Starting new PM2 process..."
                pm2 start ecosystem.config.js
              fi
              
              pm2 save
              echo "✅ PM2 process configured"
            else
              echo "⚠️ PM2 not installed - please install PM2 or contact Cloudways support"
              echo "Application built but not running"
            fi

      - name: 🏁 Deployment Summary
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.CLOUDWAYS_HOST }}
          username: ${{ secrets.CLOUDWAYS_USER }}
          key: ${{ secrets.CLOUDWAYS_SSH_KEY }}
          port: ${{ secrets.CLOUDWAYS_PORT }}
          script: |
            cd public_html
            echo "=== DEPLOYMENT SUMMARY ==="
            echo "✅ Repository: Cloned"
            echo "✅ Dependencies: Installed" 
            echo "✅ Build: Completed"
            
            if command -v pm2 > /dev/null 2>&1; then
              echo "✅ PM2: Configured"
              pm2 status
            else
              echo "⚠️ PM2: Not available"
            fi
            
            echo -e "\n📁 Deployment path: $(pwd)"
            echo "🚀 Deployment completed successfully!"