name: Deploy to Cloudways Production

on:
  push:
    branches: [main]
  workflow_dispatch: # Manual trigger

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies and build
        run: |
          npm ci
          npm run build
          
      - name: Debug GitHub Secrets
        run: |
          echo "=== GITHUB SECRETS DEBUG ==="
          echo "Host: ${{ secrets.CLOUDWAYS_HOST }}"
          echo "Username: ${{ secrets.CLOUDWAYS_USER }}"
          echo "Port: ${{ secrets.CLOUDWAYS_PORT }}"
          echo "SSH Key length: ${#CLOUDWAYS_SSH_KEY}"
          echo "SSH Key starts with: ${CLOUDWAYS_SSH_KEY:0:50}..."
          
          # Check for each secret
          if [ -z "${{ secrets.CLOUDWAYS_HOST }}" ]; then
            echo "❌ CLOUDWAYS_HOST secret is not set!"
          else
            echo "✅ CLOUDWAYS_HOST is set (${#HOST_VALUE} chars)"
          fi
          
          if [ -z "${{ secrets.CLOUDWAYS_USER }}" ]; then
            echo "❌ CLOUDWAYS_USER secret is not set!"
          else
            echo "✅ CLOUDWAYS_USER is set (${#USER_VALUE} chars)"
            echo "Username ends with: ...${USER_VALUE: -8}"
          fi
          
          if [ -z "${{ secrets.CLOUDWAYS_SSH_KEY }}" ]; then
            echo "❌ CLOUDWAYS_SSH_KEY secret is not set!"
          else
            echo "✅ CLOUDWAYS_SSH_KEY is set (${#CLOUDWAYS_SSH_KEY} chars)"
            
            # Check if SSH key is base64 encoded
            if echo "${CLOUDWAYS_SSH_KEY}" | grep -q "^-----BEGIN"; then
              echo "✅ SSH key format looks correct (starts with -----BEGIN)"
            else
              echo "⚠️ SSH key might be base64 encoded or incorrect format"
              echo "First 30 chars: ${CLOUDWAYS_SSH_KEY:0:30}"
              
              # Try to decode and check
              if echo "${CLOUDWAYS_SSH_KEY}" | base64 -d 2>/dev/null | grep -q "^-----BEGIN"; then
                echo "❌ SSH key IS base64 encoded! It should be plain text."
                echo "The key should start with: -----BEGIN RSA PRIVATE KEY-----"
              fi
            fi
          fi
          
          if [ -z "${{ secrets.CLOUDWAYS_PORT }}" ]; then
            echo "❌ CLOUDWAYS_PORT secret is not set!"
          else
            echo "✅ CLOUDWAYS_PORT is set (${#PORT_VALUE} chars)"
          fi
        env:
          CLOUDWAYS_SSH_KEY: ${{ secrets.CLOUDWAYS_SSH_KEY }}
          HOST_VALUE: ${{ secrets.CLOUDWAYS_HOST }}
          USER_VALUE: ${{ secrets.CLOUDWAYS_USER }}
          PORT_VALUE: ${{ secrets.CLOUDWAYS_PORT }}

      - name: Manual SSH Test
        run: |
          echo "=== MANUAL SSH CONNECTION TEST ==="
          
          # Create SSH key file
          echo "${{ secrets.CLOUDWAYS_SSH_KEY }}" > /tmp/ssh_key
          chmod 600 /tmp/ssh_key
          
          # Test SSH connection with verbose output
          ssh -v -i /tmp/ssh_key -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ConnectTimeout=10 ${{ secrets.CLOUDWAYS_USER }}@${{ secrets.CLOUDWAYS_HOST }} "echo 'SSH connection successful'" || echo "SSH connection failed"
          
          # Clean up
          rm -f /tmp/ssh_key

      - name: Test SSH Connection with Debug
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.CLOUDWAYS_HOST }}
          username: ${{ secrets.CLOUDWAYS_USER }}
          key: ${{ secrets.CLOUDWAYS_SSH_KEY }}
          port: ${{ secrets.CLOUDWAYS_PORT }}
          debug: true
          script: |
            echo "=== CONNECTION DIAGNOSTIC ==="
            echo "Current directory:"
            pwd
            
            echo -e "\n=== USER INFORMATION ==="
            whoami
            id
            
            echo -e "\n=== SYSTEM INFORMATION ==="
            uname -a
            
            echo -e "\n=== DIRECTORY CONTENTS ==="
            ls -la
            
            echo -e "\n=== NODE.JS & NPM VERSIONS ==="
            which node
            node --version || echo "Node.js not found"
            which npm
            npm --version || echo "npm not found"
            
            echo -e "\n=== GIT INFORMATION ==="
            which git
            git --version || echo "git not found"
            
            echo -e "\n=== PM2 INFORMATION ==="
            which pm2
            pm2 --version || echo "PM2 not found"
            pm2 status || echo "PM2 not running or no processes"
            
            echo -e "\n=== DISK SPACE ==="
            df -h .
            
            echo -e "\n=== MEMORY ==="
            free -h || echo "free command not available"
            
            echo -e "\n=== NETWORK CONNECTIVITY ==="
            ping -c 2 google.com || echo "No internet connectivity"
            
      - name: Connection Test Complete
        run: echo "Basic connection diagnostic completed. Check logs above for server information."